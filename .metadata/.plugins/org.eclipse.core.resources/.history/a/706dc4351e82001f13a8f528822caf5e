package kr.ac.kopo.ctc.stock.web;

import org.springframework.core.io.FileSystemResource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import java.io.File;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.concurrent.CompletableFuture;
import kr.ac.kopo.ctc.stock.service.News_Crawl;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;

@RestController
@RequestMapping("/api/news")
public class NewsController {

    // Python 스크립트 실행해서 뉴스 데이터 수집
	// Python 스크립트 실행해서 뉴스 데이터 수집
	@PostMapping("/collect")
	public ResponseEntity<String> collectNews(@RequestParam String stockName) {
	    System.out.println("실행되기는 했어 collect");
	    try {
	        // 비동기적으로 Python 스크립트 실행
	        CompletableFuture.runAsync(() -> {
	            try {
	                ProcessBuilder processBuilder = new ProcessBuilder("/Users/parkjihwan/miniforge3/bin/python3", "/Users/parkjihwan/Documents/development/Jihwan/Python/news.py", stockName);
	                processBuilder.redirectErrorStream(true); // 오류를 표준 출력으로 리다이렉트

	                Process process = processBuilder.start();

	                // 프로세스의 출력 결과를 읽어오기
	                BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
	                String line;
	                while ((line = reader.readLine()) != null) {
	                    System.out.println(line); // 출력 결과를 로그로 출력
	                }

	                process.waitFor();
	            } catch (Exception e) {
	                throw new RuntimeException("Error during Python script execution", e);
	            }
	        });

	        return ResponseEntity.ok("News data is being collected. You can fetch it later.");
	    } catch (Exception e) {
	        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Error while collecting news data: " + e.getMessage());
	    }
	}


    // 수집된 h5 파일 다운로드
	@GetMapping("/getNews")
	public ResponseEntity<FileSystemResource> downloadH5(@RequestParam String stockName) {
	    System.out.println("실행되기는 했어");
	    try {
	        String filePath = "/Users/parkjihwan/Documents/development/Jihwan/Python/" + stockName + ".h5";
	        File file = new File(filePath);

	        if (!file.exists()) {
	            return ResponseEntity.status(HttpStatus.NOT_FOUND).body(null);
	        }

	        FileSystemResource resource = new FileSystemResource(file);
	        HttpHeaders headers = new HttpHeaders();
	        
	        // 파일명을 UTF-8로 인코딩
	        String encodedFileName = URLEncoder.encode(file.getName(), StandardCharsets.UTF_8.toString());
	        headers.add(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename*=UTF-8''" + encodedFileName);

	        return new ResponseEntity<>(resource, headers, HttpStatus.OK);
	    } catch (Exception e) {
	        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(null);
	    }
	}

}
